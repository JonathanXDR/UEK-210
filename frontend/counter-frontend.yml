# Erstellen Sie ein weiteres Deployment im mit der Bezeichnung app=counter-frontend welches einen Pod in Betrieb hat. Als Image soll counter-frontend verwendet werden.
# Das Deployment muss die Konfiguration für die Backendverbindung beinhalten. Erstellen Sie dafür eine neue ConfigMap für den REACT_APP_BACKEND_URL und dem URL der Backends (siehe Route des Backends).
# Das Deployment counter-frontend darf dabei nicht mit Image-Tag latest laufen und soll auf dem NODE_ENV production laufen
# Erstellen Sie einen Service mit dem Namen counter-frontend.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: counter-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: counter-frontend
  template:
    metadata:
      labels:
        app: counter-frontend
    spec:
      containers:
        - name: counter-frontend
          image: ghcr.io/jonathanxdr/counter-frontend:v1
          ports:
            - containerPort: 3000
          env:
            - name: npm_config_cache
              value: ./.npm-cache
            - name: NODE_ENV
              value: production
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: counter-backend
  labels:
    app: counter-backend
data:
  REACT_APP_BACKEND_URL: http://counter-backend:8080
---
apiVersion: v1
kind: Service
metadata:
  name: counter-frontend
spec:
  selector:
    app: counter-frontend
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
---
# Stellen Sie sicher, dass die Route des counter-frontend von http auf https umleitet.
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app: counter-frontend
  name: counter-frontend
spec:
  port:
    targetPort: 3000-tcp
  to:
    kind: Service
    name: counter-frontend
  tls:
    insecureEdgeTerminationPolicy: Redirect
    termination: edge
